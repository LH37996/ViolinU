package flute.config

import chisel3._
import chisel3.util.BitPat

trait BasicInstructions {
  /** Logical Instructions **/
  val AND    = BitPat("b000000???????????????00000100100")
  val OR     = BitPat("b000000???????????????00000100101")
  val XOR    = BitPat("b000000???????????????00000100110")
  val NOR    = BitPat("b000000???????????????00000100111")
  val ANDI   = BitPat("b001100??????????????????????????")
  val ORI    = BitPat("b001101??????????????????????????")
  val XORI   = BitPat("b001110??????????????????????????")
  val LUI    = BitPat("b00111100000?????????????????????")
  /** Arithmetic Instructions **/
  val ADD    = BitPat("b000000???????????????00000100000")
  val ADDI   = BitPat("b001000??????????????????????????")
  val ADDU   = BitPat("b000000???????????????00000100001")
  val ADDIU  = BitPat("b001001??????????????????????????")
  val SUB    = BitPat("b000000???????????????00000100010")
  val SUBU   = BitPat("b000000???????????????00000100011")
  val SLT    = BitPat("b000000???????????????00000101010")
  val SLTI   = BitPat("b001010??????????????????????????")
  val SLTU   = BitPat("b000000???????????????00000101011")
  val SLTIU  = BitPat("b001011??????????????????????????")
  /** Branch and Jump Instructions **/
  val BEQ    = BitPat("b000100??????????????????????????")  // BEQ,B
  val BGEZ   = BitPat("b000001?????00001????????????????")
  val BGEZAL = BitPat("b000001?????10001????????????????")  // BGEZAL,BAL
  val BGTZ   = BitPat("b000111?????00000????????????????")
  val BLEZ   = BitPat("b000110?????00000????????????????")
  val BLTZ   = BitPat("b000001?????00000????????????????")
  val BLTZAL = BitPat("b000001?????10000????????????????")
  val BNE    = BitPat("b000101??????????????????????????")
  val J      = BitPat("b000010??????????????????????????")
  val JAL    = BitPat("b000011??????????????????????????")
  val JALR   = BitPat("b000000?????00000?????00000001001")
  val JR     = BitPat("b000000?????000000000000000001000")
  /** Load, Store, and Memory Control Instructions **/
  val LW     = BitPat("b100011??????????????????????????")
  val SW     = BitPat("b101011??????????????????????????")
  val SB     = BitPat("b101000??????????????????????????")
  /** Move Instructions **/
  /** Shift Instructions **/
  val SLL    = BitPat("b00000000000???????????????000000")  // SLL,NOP
  val SLLV   = BitPat("b000000???????????????00000000100")
  val SRA    = BitPat("b00000000000???????????????000011")
  val SRAV   = BitPat("b000000???????????????00000000111")
  val SRL    = BitPat("b00000000000???????????????000010")
  val SRLV   = BitPat("b000000???????????????00000000110")
  /** Trap Instructions **/
  /** Syscall, currently Halt **/
  val SYSCALL = BitPat("b000000????????????????????001100")
}

object Instructions extends BasicInstructions