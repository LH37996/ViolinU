package config

import chisel3._
import chisel3.util.BitPat

object Instructions {
  /** Logical Instructions **/
  def AND    = BitPat("b000000???????????????00000100100")
  def OR     = BitPat("b000000???????????????00000100101")
  def XOR    = BitPat("b000000???????????????00000100110")
  def NOR    = BitPat("b000000???????????????00000100111")
  def ANDI   = BitPat("b001100??????????????????????????")
  def ORI    = BitPat("b001101??????????????????????????")
  def XORI   = BitPat("b001110??????????????????????????")
  def LUI    = BitPat("b00111100000?????????????????????")
  /** Arithmetic Instructions **/
  def ADD    = BitPat("b000000???????????????00000100000")
  def ADDI   = BitPat("b001000??????????????????????????")
  def ADDU   = BitPat("b000000???????????????00000100001")
  def ADDIU  = BitPat("b001001??????????????????????????")
  def SUB    = BitPat("b000000???????????????00000100010")
  def SUBU   = BitPat("b000000???????????????00000100011")
  /** Branch and Jump Instructions **/
  def BEQ    = BitPat("b000100??????????????????????????")  // BEQ,B
  def BGEZ   = BitPat("b000001?????00001????????????????")
  def BGEZAL = BitPat("b000001?????10001????????????????")  // BGEZAL,BAL
  def BGTZ   = BitPat("b000111?????00000????????????????")
  def BLEZ   = BitPat("b000110?????00000????????????????")
  def BLTZ   = BitPat("b000001?????00000????????????????")
  def BLTZAL = BitPat("b000001?????10000????????????????")
  def BNE    = BitPat("b000101??????????????????????????")
  def J      = BitPat("b000010??????????????????????????")
  def JAL    = BitPat("b000011??????????????????????????")
  def JALR   = BitPat("b000000?????00000??????????001001")
  def JR     = BitPat("b000000?????0000000000?????001000")
  /** Load, Store, and Memory Control Instructions **/
  def LB     = BitPat("b100000??????????????????????????")
  /** Move Instructions **/
  /** Shift Instructions **/
  /** Trap Instructions **/
  /** No Operation **/
}